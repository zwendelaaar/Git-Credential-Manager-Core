{
   // Use IntelliSense to find out which attributes exist for C# debugging
   // Use hover for the description of the existing attributes
   // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
   "version": "0.2.0",
   "configurations": [
       {
           "name": "Launch Program",
           "program": "${workspaceFolder}/app.js",
           "request": "launch",
           "skipFiles": [
               "<node_internals>/**"
           ],
           "type": "pwa-node"
       },
       {
           "type": "java",
           "name": "Launch External Terminal",
           "request": "launch",
           "console": "externalTerminal",
           "mainClass": ""
       },
       {
           "name": ".NET Core Launch (web)",
           "type": "coreclr",
           "request": "launch",
           "preLaunchTask": "build",
           "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
           "args": [],
           "cwd": "${workspaceFolder}",
           "stopAtEntry": false,
           "serverReadyAction": {
               "action": "openExternally",
               "pattern": "\\bNow listening on:\\s+(https?://\\S+)"
           },
           "env": {
               "ASPNETCORE_ENVIRONMENT": "Development"
           },
           "sourceFileMap": {
               "/Views": "${workspaceFolder}/Views"
           }
       },
       {
           "type": "firefox",
           "request": "launch",
           "reAttach": true,
           "name": "Launch localhost",
           "url": "http://localhost/index.html",
           "webRoot": "${workspaceFolder}"
       },
       {
           "type": "npm",
           "script": "start",
           "isBackground": true,
           "presentation": {
               "focus": true,
               "panel": "dedicated"
           },
           "group": {
               "kind": "build",
               "isDefault": true
           },
           "problemMatcher": {
               "owner": "typescript",
               "source": "ts",
               "applyTo": "closedDocuments",
               "fileLocation": ["relative", "${cwd}"],
               "pattern": "$tsc",
               "background": {
                   "activeOnStart": true,
                   "beginsPattern": {
                       "regexp": "(.*?)"
                   },
                   "endsPattern": {
                       "regexp": "Compiled |Failed to compile."
                   }
               }
           }
       }
   {
       "name": "Launch Angular",
       "type": "chrome",
       "request": "launch",
       "preLaunchTask": "npm: start",
       "url": "http://localhost:4200/",
       "webRoot": "${workspaceFolder}"
   }
       {
           "command": "npm start",
           "name": "Run npm start",
           "request": "launch",
           "type": "node-terminal"
       },

       {
           "name": ".NET Core Launch (web)",
           "type": "coreclr",
           "request": "launch",
           "preLaunchTask": "build",
           "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
           "args": [],
           "cwd": "${workspaceFolder}",
           "stopAtEntry": false,
           "serverReadyAction": {
               "action": "openExternally",
               "pattern": "\\bNow listening on:\\s+(https?://\\S+)"
           },
           "env": {
               "ASPNETCORE_ENVIRONMENT": "Development"
           },
           "sourceFileMap": {
               "/Views": "${workspaceFolder}/Views"
           }
       },
       {
           "name": ".NET Core Launch (web)",
           "type": "coreclr",
           "request": "launch",
           "preLaunchTask": "build",
           "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
           "args": [],
           "cwd": "${workspaceFolder}",
           "stopAtEntry": false,
           "serverReadyAction": {
               "action": "openExternally",
               "pattern": "\\bNow listening on:\\s+(https?://\\S+)"
           },
           "env": {
               "ASPNETCORE_ENVIRONMENT": "Development"
           },
           "sourceFileMap": {
               "/Views": "${workspaceFolder}/Views"
           }
       },
       {
           "name": ".NET Core Attach",
           "type": "coreclr",
           "request": "attach"
       },


   


   Frans
       {
           "name": "Launch Program",
           "program": "${workspaceFolder}/app.js",
           "request": "launch",
           "skipFiles": [
               "<node_internals>/**"
           ],
           "type": "pwa-node"
       },


       
       {
           "name": "Attach to Chrome",
           "port": 9222,
           "request": "attach",
           "type": "pwa-chrome",
           "webRoot": "${workspaceFolder}"
       },
        {
            "name": "Git Credential Manager (get)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            // If you have changed target frameworks, make sure to update the program path.
            "program": "${workspaceFolder}/out/shared/Git-Credential-Manager/bin/Debug/net5.0/git-credential-manager-core.dll",
            "args": ["get"],
            "cwd": "${workspaceFolder}/out/shared/Git-Credential-Manager",
            "console": "integratedTerminal",
            "stopAtEntry": false,
        },
        {
            "name": "Git Credential Manager (store)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            // If you have changed target frameworks, make sure to update the program path.
            "program": "${workspaceFolder}/out/shared/Git-Credential-Manager/bin/Debug/net5.0/git-credential-manager-core.dll",
            "args": ["store"],
            "cwd": "${workspaceFolder}/out/shared/Git-Credential-Manager",
            "console": "integratedTerminal",
            "stopAtEntry": false,
        },
        {
            "name": ".NET Attach",
            "type": "coreclr",
            "request": "attach",
            "processId": "${command:pickProcess}"
        }
    ]
}
